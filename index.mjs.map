{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Returns a function that applies arguments to a provided function according to a predicate function.\n*\n* ## Notes\n*\n-   The predicate function is provided the following arguments:\n*\n*     -   **value**: argument value.\n*     -   **index**: argument index.\n*\n* -   Only those arguments in which the predicate function returns a truthy value are applied to a provided function.\n*\n* @param {Function} fcn - input function\n* @param {Function} predicate - predicate function\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @returns {Function} wrapped function\n*\n* @example\n* function foo( a, b ) {\n*     return [ a, b ];\n* }\n*\n* function predicate( v ) {\n*     return ( v !== 2 );\n* }\n*\n* var bar = filterArguments( foo, predicate );\n*\n* var out = bar( 1, 2, 3 );\n* // returns [ 1, 3 ]\n*/\nfunction filterArguments( fcn, predicate, thisArg ) {\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( '1Tn3c,J9', fcn ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( '1Tn2H,G6', predicate ) );\n\t}\n\treturn wrap;\n\n\t/**\n\t* Invokes a function according to a predicate function.\n\t*\n\t* @private\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction wrap() {\n\t\tvar args;\n\t\tvar v;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\tv = arguments[ i ];\n\t\t\tif ( predicate( v, i ) ) {\n\t\t\t\targs.push( v );\n\t\t\t}\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default filterArguments;\n"],"names":["filterArguments","fcn","predicate","thisArg","isFunction","TypeError","format","args","v","i","arguments","length","push","apply"],"mappings":";;uLA6DA,SAASA,EAAiBC,EAAKC,EAAWC,GACzC,IAAMC,EAAYH,GACjB,MAAM,IAAII,UAAWC,EAAQ,WAAYL,IAE1C,IAAMG,EAAYF,GACjB,MAAM,IAAIG,UAAWC,EAAQ,WAAYJ,IAE1C,OASA,WACC,IAAIK,EACAC,EACAC,EAGJ,IADAF,EAAO,GACDE,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAE7BP,EADLM,EAAIE,UAAWD,GACIA,IAClBF,EAAKK,KAAMJ,GAGb,OAAOP,EAAIY,MAAOV,EAASI,EAC3B,CACF"}